networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: bot
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: bot_db
    volumes:
      - ./backend/db-init:/docker-entrypoint-initdb.d:ro
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  backend:
    build: ./backend
    depends_on:
      - db
    command: sh -c "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - app-network

  frontend:
    build: ./admin-panel
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    volumes:
      - ./admin-panel:/app
    networks:
      - app-network

  bot:
    container_name: lcbot-bot-1
    build:
      context: .
    volumes:
      - ./tg_bot_final.py:/app/tg_bot_final.py  # Монтируем файл бота
      - ./law_keywords.json:/app/law_keywords.json
      - ./docs:/app/docs
      - ./parse_documents.py:/app/parse_documents.py  # Если есть
      - //srv-2/обмен:/app/shared  # Ваша папка shared
    environment:
      BACKEND_URL: http://backend:8000
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - backend
      - db
      - ollama
    networks:
      - app-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama
    networks:
      - app-network

volumes:
  ollama_data: